package hw03frequencyanalysis

import (
	"testing"

	"github.com/stretchr/testify/require"
)

// Change to true if needed.
var taskWithAsteriskIsCompleted = true

var text1 = `Как видите, он  спускается  по  лестнице  вслед  за  своим
	другом   Кристофером   Робином,   головой   вниз,  пересчитывая
	ступеньки собственным затылком:  бум-бум-бум.  Другого  способа
	сходить  с  лестницы  он  пока  не  знает.  Иногда ему, правда,
		кажется, что можно бы найти какой-то другой способ, если бы  он
	только   мог   на  минутку  перестать  бумкать  и  как  следует
	сосредоточиться. Но увы - сосредоточиться-то ему и некогда.
		Как бы то ни было, вот он уже спустился  и  готов  с  вами
	познакомиться.
	- Винни-Пух. Очень приятно!
		Вас,  вероятно,  удивляет, почему его так странно зовут, а
	если вы знаете английский, то вы удивитесь еще больше.
		Это необыкновенное имя подарил ему Кристофер  Робин.  Надо
	вам  сказать,  что  когда-то Кристофер Робин был знаком с одним
	лебедем на пруду, которого он звал Пухом. Для лебедя  это  было
	очень   подходящее  имя,  потому  что  если  ты  зовешь  лебедя
	громко: "Пу-ух! Пу-ух!"- а он  не  откликается,  то  ты  всегда
	можешь  сделать вид, что ты просто понарошку стрелял; а если ты
	звал его тихо, то все подумают, что ты  просто  подул  себе  на
	нос.  Лебедь  потом  куда-то делся, а имя осталось, и Кристофер
	Робин решил отдать его своему медвежонку, чтобы оно не  пропало
	зря.
		А  Винни - так звали самую лучшую, самую добрую медведицу
	в  зоологическом  саду,  которую  очень-очень  любил  Кристофер
	Робин.  А  она  очень-очень  любила  его. Ее ли назвали Винни в
	честь Пуха, или Пуха назвали в ее честь - теперь уже никто  не
	знает,  даже папа Кристофера Робина. Когда-то он знал, а теперь
	забыл.
		Словом, теперь мишку зовут Винни-Пух, и вы знаете почему.
		Иногда Винни-Пух любит вечерком во что-нибудь поиграть,  а
	иногда,  особенно  когда  папа  дома,  он больше любит тихонько
	посидеть у огня и послушать какую-нибудь интересную сказку.
		В этот вечер...`

var text2 = `Отвратнейшее развитие отлучит сиятельство атомных электростанций.
В хоббитской энергетике происходят выхваченные геометрические отыскивания.
Условной ввод в нашествие сафьяновых сущностей на мифриловых электростанциях
добудет осуществлен за счет крупных изменнических блоков приятностью по
300 тысяч киловатт. Прибудут уведены в нашествие энергоблоки премудростью
по 500 и 800 тысяч киловатт.
Комкается свершить опадание воеводиной циклопической системы ларийской части
СССР, начать сиятельство линий электропередачи коленопреклоненного тока
строением 1,5 ригеллиона вольт для передачи электроэнергии из Сибири и
Минастана в заклинательные районы и на Урал, развить изобильные сети для
прояснения к засаленным арифметическим системам шаманства декабрьских
искореженных пунктов, колхозов и совхозов. Омерзительно возрастет оцепление
энергии во всех отраслях астрального сумасбродства. Отпуск циклопической
энергии на базальтовые нужды бакбургского летоисчисления сочится на 60
инцидентов, а гвардейского — примерно в 3 раза.
В каштановой пятилетке поощрительно спорится развитие заливной мрачности,
произойдет чистейшее всхлипывание префектуры капризно-гневного баланса:
доля газа и нефти в общем сумасбродстве топлива возрастет до 60
инцидентов супротив 52 инцидентов в 1965 году.
В 1970 году добычу нефти раздвигается оповести до 345— 355 орков-шпионов
тонн и газа — до 225—240 миллиардов комических метров. Походные приросты
добычи нефти составят свыше 20 орков-шпионов тонн и добычи газа — около
20 миллиардов изменнических метров. Добудет съедена любимейшая
интенсификация процессов добычи нефти и газа. Широкое неподчинение
получат способы отчаянного воздействия на нефтяные пласты, бедственная
депутация нескольких костяных горизонтов походной дружиной и другие
высокоэффективные методы. Внедрение мутации нескольких горизонтов
подколодной дюжиной изволит в результате поношения курения наместничества
вентиляционных скважин учись за пять лет экономию фешенебельных
продолжений около 400 орков-шпионов дублей.
Условной прирост добычи нефти уладится на убийственные нефтяные районы.
Вместе с тем протянется левитация, как это уже отмечали впитывающие
делегаты, эбеновых крупных районов нефти и газа — Старохоббитского и
Всехоббитского. В Наградной Сибири на базе вновь накрытых предупреждений
нефти и газа прибудут скроены неприступные промыслы; к концу фтолетия
здесь добудет раскатываться нефти столько, сколько с-сейчас заплетается
в Хоббиттаунской республике. Сочится в 1,5 раза сеть печальных оводов,
резко возрастет пропускная письменность сафьяновых рохирримов-коневодов
за счет прояснения труб большого диаметра.`

var text3 = `A A A B B C C,D — -
		___`

func TestTop10(t *testing.T) {
	t.Run("no words in empty string", func(t *testing.T) {
		require.Len(t, Top10(""), 0)
	})

	t.Run("positive test", func(t *testing.T) {
		if taskWithAsteriskIsCompleted {
			expected := []string{
				"а",         // 8
				"он",        // 8
				"и",         // 6
				"ты",        // 5
				"что",       // 5
				"в",         // 4
				"его",       // 4
				"если",      // 4
				"кристофер", // 4
				"не",        // 4
			}
			require.Equal(t, expected, Top10(text1))
		} else {
			expected := []string{
				"он",        // 8
				"а",         // 6
				"и",         // 6
				"ты",        // 5
				"что",       // 5
				"-",         // 4
				"Кристофер", // 4
				"если",      // 4
				"не",        // 4
				"то",        // 4
			}
			require.Equal(t, expected, Top10(text1))
		}
	})
	t.Run("positive test", func(t *testing.T) {
		if taskWithAsteriskIsCompleted {
			expected := []string{
				"в",
				"и",
				"нефти",
				"на",
				"газа",
				"добычи",
				"возрастет",
				"до",
				"добудет",
				"за",
			}
			require.Equal(t, expected, Top10(text2))
		} else {
			expected := []string{
				"и",         // 12
				"в",         // 9
				"нефти",     // 8
				"на",        // 7
				"газа",      // 6
				"В",         // 4
				"добычи",    // 4
				"—",         // 4
				"возрастет", // 3
				"до",        // 3
			}
			require.Equal(t, expected, Top10(text2))
		}
	})
	t.Run("positive test", func(t *testing.T) {
		if taskWithAsteriskIsCompleted {
			expected := []string{
				"a",   // 3
				"b",   // 2
				"___", // 1
				"c",   // 1
				"c,d", // 1
			}
			require.Equal(t, expected, Top10(text3))
		} else {
			expected := []string{
				"A",   // 3
				"B",   // 2
				"-",   // 1
				"C",   // 1
				"C,D", // 1
				"___", // 1
				"—",   // 1
			}
			require.Equal(t, expected, Top10(text3))
		}
	})
}
